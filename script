killall gpg-agent
rm -rf /etc/pacman.d/gnupg/
pacman-key --init
pacman-key --populate
pacman -Sy archlinux-keyring --noconfirm
pacman -S vim linux-headers base-devel reflector networkmanager git xdg-utils xdg-user-dirs bash-completion ntfs-3g os-prober --noconfirm --needed
systemctl enable NetworkManager
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
pacman -Syy
clear
read -rp "Specify hostname: " hostname
read -rp "Specify username: " username
while ! useradd -m "$username" --badname; do
read -rp "Specify username: " username
done
passwd "$username"
read -rp "Specify region (e.g. Europe/Prague): " localization
ln -sf /usr/share/zoneinfo/"$localization" /etc/localtime
hwclock --systohc
echo "LANG=pl_PL.UTF-8" > /etc/locale.conf
sed -i '/pl_PL.UTF-8/s/^#//g' /etc/locale.gen
locale-gen
usermod -aG wheel "$username"
sed -i '/%wheel ALL=(ALL:ALL) ALL/s/^#//g' /etc/sudoers
echo "$hostname" > /etc/hostname
mkinitcpio -P
clear

PS3="UEFI/BIOS?: "
options=("UEFI" "BIOS")
select opt in "${options[@]}"
do
    case $opt in
        "UEFI")
    pacman -S grub efibootmgr efivar --noconfirm --needed
    read -rp "Specify the location of your EFI partition (e.g. /dev/sda1): " efipart
    read -rp "Specify the mount-point of your EFI partition (e.g. /boot/efi, /efi, /boot): " efidir
    umount "$efipart"
    mount --mkdir "$efipart" "$efidir"
    while ! grub-install --target=x86_64-efi --efi-directory="$efidir" --bootloader-id=archlinux; do
    read -rp "Specify EFI partition path (e.g. /dev/sda1): " efipart
    read -rp "Specify EFI partition mount-point (e.g. /boot/efi, /efi, /boot): " efidir
    done
    sed -i '/GRUB_DISABLE_OS_PROBER=false/s/^#//g' /etc/default/grub
    grub-mkconfig -o /boot/grub/grub.cfg
    break
    ;;
        "BIOS")
    pacman -S grub --noconfirm --needed
    read -rp "Specify the path of the disk on which grub is to be installed (e.g. /dev/sda): " grubdir
    while ! grub-install --target=i386-pc $grubdir; do
    read -rp "Specify the path of the disk on which grub is to be installed (e.g. /dev/sda): " grubdir
    done
    sed -i '/GRUB_DISABLE_OS_PROBER=false/s/^#//g' /etc/default/grub
    grub-mkconfig -o /boot/grub/grub.cfg
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done
clear

PS3="Which audio server should be installed?: "
options=("Pipewire" "Pulseaudio" "None")
select opt in "${options[@]}"
do
    case $opt in
        "Pipewire")
    pacman -S pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber pavucontrol --noconfirm --needed
    systemctl enable --global pipewire
    systemctl enable --global pipewire-pulse
    break
    ;;
        "Pulseaudio")
    pacman -S pulseaudio pulseaudio-alsa pulseaudio-jack pulseaudio-bluetooth pulseaudio-zeroconf pulseaudio-lirc pavucontrol --noconfirm --needed
    systemctl enable --global pulseaudio
    break
    ;;
        "None")
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done
clear

PS3="Which graphics driver should be installed?: "
options=("NVIDIA" "AMD" "Intel" "Nouveau" "Virtual machine" "None")
select opt in "${options[@]}"
do
    case $opt in
        "NVIDIA")
    pacman -S xorg xorg-server nvidia nvidia-utils lib32-nvidia-utils nvidia-settings --noconfirm --needed
    break
    ;;
        "AMD")
    pacman -S xorg xorg-server xf86-video-amdgpu mesa lib32-mesa --noconfirm --needed
    break
    ;;
        "Intel")
    pacman -S xorg xorg-server xf86-video-intel mesa lib32-mesa --noconfirm --needed
    break
    ;;
        "Nouveau")
    pacman -S xorg xorg-server  --noconfirm --needed
    break
    ;;

        "Virtual machine")
    pacman -S xf86-video-vmware xf86-input-vmmouse --noconfirm --needed
    break
    ;;   
        "None")
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done
clear

PS3="Which desktop environment should be installed?: "
options=("KDE Plasma" "XFCE" "MATE" "Cinnamon" "GNOME" "None")
select opt in "${options[@]}"
do
    case $opt in
        "KDE Plasma")
    pacman -S plasma sddm gwenview kate konsole dolphin spectacle ark noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts cups hplip system-config-printer --noconfirm --needed
    systemctl enable sddm
    sed -i 's/Current=/Current=breeze/g' /usr/lib/sddm/sddm.conf.d/default.conf
    sed -i 's/CursorTheme=/CursorTheme=breeze_cursors/g' /usr/lib/sddm/sddm.conf.d/default.conf
    sudo rm /usr/share/applications/hp-uiscan.desktop
    sudo rm /usr/share/applications/hplip.desktop
    systemctl enable cups
    break
    ;;
        "XFCE")
    pacman -S xfce4 xfce4-whiskermenu-plugin xfce4-terminal xfce4-dev-tools xfce4-screenshooter lightdm lightdm-gtk-greeter gvfs thunar thunar-volman system-config-printer network-manager-applet noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts cups hplip --noconfirm --needed
    systemctl enable lightdm
    sudo rm /usr/share/applications/hp-uiscan.desktop
    sudo rm /usr/share/applications/hplip.desktop
    systemctl enable cups
    break
    ;;
        "MATE")
    pacman -S mate mate-extra lightdm lightdm-gtk-greeter noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts cups hplip system-config-printer --noconfirm --needed
    systemctl enable lightdm
    sudo rm /usr/share/applications/hp-uiscan.desktop
    sudo rm /usr/share/applications/hplip.desktop
    systemctl enable cups
    break
    ;;
        "Cinnamon")
    pacman -S cinnamon cinnamon-translations lightdm lightdm-slick-greeter noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts cups system-config-printer hplip --noconfirm --needed
    systemctl enable lightdm
    sudo rm /usr/share/applications/hp-uiscan.desktop
    sudo rm /usr/share/applications/hplip.desktop
    systemctl enable cups
    break
    ;;
        "GNOME")
    pacman -S gnome gdm noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts cups system-config-printer hplip --noconfirm --needed
    systemctl enable gdm
    sudo rm /usr/share/applications/hp-uiscan.desktop
    sudo rm /usr/share/applications/hplip.desktop
    systemctl enable cups
    break
    ;;
        "None")
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done
clear
    
while true
do
    read -rp "Arch was installed successfully. Do you want to exit chroot? [y/n] " yn
    case $yn in
        [Yy]* ) rm script && exit;;
        [Nn]* ) clear && break;;
        * ) echo "Invalid option";;
    esac
    done
