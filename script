killall gpg-agent
rm -rf /etc/pacman.d/gnupg/
pacman-key --init
pacman-key --populate
pacman -Sy archlinux-keyring --noconfirm
pacman -S vim linux-headers base-devel reflector networkmanager git xdg-utils xdg-user-dirs bash-completion --noconfirm --needed
systemctl enable NetworkManager
read -rp "Specify country name: " srvloc
while ! reflector --country "$srvloc" --save /etc/pacman.d/mirrorlist; do
read -rp "Specify country name: " srvloc
done
ln -sf /usr/share/zoneinfo/Europe/Prague /etc/localtime
hwclock --systohc
sed -i '/pl_PL.UTF-8/s/^#//g' /etc/locale.gen
locale-gen
echo "LANG=pl_PL.UTF-8" > /etc/locale.conf
read -rp "Specify hostname: " hostname
read -rp "Specify username: " username
while ! useradd -m "$username"; do
read -rp "Specify username: " username
done
passwd $username
usermod -aG wheel $username
sed -i '/%wheel ALL=(ALL:ALL) ALL/s/^#//g' /etc/sudoers
echo "$hostname" > /etc/hostname
mkinitcpio -P

PS3="UEFI/BIOS?: "
options=("UEFI" "BIOS")
select opt in "${options[@]}"
do
    case $opt in
        "UEFI")
    pacman -S grub efibootmgr efivar --noconfirm --needed
    read -rp "Specify EFI partition mount-point (e.g. /boot/efi, /efi, /boot): " efidir
    read -rp "Specify EFI partition path (e.g. /dev/sda1): " efipart
    mount --mkdir "$efipart" "$efidir"
    while ! grub-install --target=x86_64-efi --efi-directory="$efidir" --bootloader-id=archlinux; do
    read -rp "Specify EFI partition mount-point (e.g. /boot/efi, /efi, /boot): " efidir
    read -rp "Specify EFI partition path (e.g. /dev/sda1): " efipart
    mount --mkdir "$efipart" "$efidir"
    done
    grub-mkconfig -o /boot/grub/grub.cfg
    break
    ;;
        "BIOS")
    pacman -S grub --noconfirm --needed
    read -rp "Specify the path of the disk on which grub is to be installed (e.g. /dev/sda): " grubdir
    while ! grub-install --target=i386-pc $grubdir; do
    read -rp "Specify the path of the disk on which grub is to be installed (e.g. /dev/sda): " grubdir
    done
    grub-mkconfig -o /boot/grub/grub.cfg
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done

PS3="Which audio server should be installed?: "
options=("Pipewire" "Pulseaudio" "None")
select opt in "${options[@]}"
do
    case $opt in
        "Pipewire")
    pacman -S pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber pavucontrol --noconfirm --needed
    systemctl enable --global pipewire
    systemctl enable --global pipewire-pulse
    break
    ;;
        "Pulseaudio")
    pacman -S pulseaudio pulseaudio-alsa pulseaudio-jack pulseaudio-bluetooth pulseaudio-zeroconf pulseaudio-lirc pavucontrol --noconfirm --needed
    systemctl enable --global pulseaudio
    break
    ;;
        "None")
    break
    ;;
        *)
    echo "Invalid format"
    ;;
esac
done

PS3="Which graphics driver should be installed?: "
options=("NVIDIA" "AMD" "Intel" "Nouveau (open-source NVIDIA driver)")
select opt in "${options[@]}"
do
    case $opt in
        "NVIDIA")
    pacman -S xorg xorg-server nvidia nvidia-utils nvidia-settings --noconfirm --needed
    break
    ;;
        "AMD")
    pacman -S xorg xorg-server mesa xf86-amdgpu --noconfirm --needed
    break
    ;;
        "Intel")
    pacman -S xorg xorg-server mesa xf86-video-intel --noconfirm --needed
    break
    ;;
        "Nouveau (open-source NVIDIA driver)")
    pacman -S xorg xorg-server mesa xf86-video-nouveau --noconfirm --needed
    break
    ;;
        "None")
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done

PS3="Which desktop environment should be installed?: "
options=("KDE Plasma" "XFCE" "MATE" "Cinnamon" "GNOME" "None")
select opt in "${options[@]}"
do
    case $opt in
        "KDE Plasma")
    pacman -S plasma sddm gwenview kate konsole dolphin spectacle ark noto-fonts noto-fonts-emoji noto-fonts-cjk --noconfirm --needed
    systemctl enable sddm
    sed -i 's/Current=/Current=breeze/g' /usr/lib/sddm/sddm.conf.d/default.conf
    sed -i 's/CursorTheme=/CursorTheme=breeze_cursors/g' /usr/lib/sddm/sddm.conf.d/default.conf
    break
    ;;
        "XFCE")
    pacman -S xfce4 xfce4-whiskermenu-plugin xfce4-terminal xfce4-dev-tools xfce4-screenshooter lightdm lightdm-gtk-greeter gvfs thunar thunar-volman network-manager-applet noto-fonts noto-fonts-emoji noto-fonts-cjk --noconfirm --needed
    systemctl enable lightdm
    break
    ;;
        "MATE")
    pacman -S mate mate-extra lightdm lightdm-gtk-greeter noto-fonts noto-fonts-emoji noto-fonts-cjk --noconfirm --needed
    systemctl enable lightdm
    break
    ;;
        "Cinnamon")
    pacman -S cinnamon cinnamon-translations lightdm lightdm-slick-greeter noto-fonts noto-fonts-emoji noto-fonts-cjk --noconfirm --needed
    systemctl enable lightdm
    break
    ;;
        "GNOME")
    pacman -S gnome gdm noto-fonts noto-fonts-emoji noto-fonts-cjk --noconfirm --needed
    systemctl enable gdm
    break
    ;;
        "None")
    break
    ;;
        *)
    echo "Invalid option"
    ;;
esac
done

while true
    do
    read -rp "Arch was installed successfully. Do you want to execute postinstall script and reboot? [y/n] " yn
    case $yn in
        [Yy]* ) bash postinstall;;
        [Nn]* ) break;;
        * ) echo "Invalid option";;
    esac
    done
